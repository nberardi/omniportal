-- ================================================================================================================
-- Stored Procedures generated by LLBLGen v1.21.2003.712 Final on Wednesday, January 26, 2005, 4:47:10 PM
-- For the Low Level Business Logic Layer for the database 'OmniPortal'
-- ================================================================================================================
SET NOCOUNT ON
GO
USE [OmniPortal]
GO

-- ========================================================================================================
-- [Stored Procedures generated for table:  Blog_Categories]
GO

-- //// Insert Stored procedure.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_Categories_Insert]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_Categories_Insert]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will insert 1 row in the table 'Blog_Categories'
-- Gets: @Name nvarchar(64)
-- Returns: @ID int
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_Categories_Insert]
	@Name nvarchar(64),
	@ID int OUTPUT,
	@ErrorCode int OUTPUT
AS
-- INSERT a new row in the table.
INSERT [dbo].[Blog_Categories]
(
	[Name]
)
VALUES
(
	@Name
)
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
-- Get the IDENTITY value for the row just inserted.
SELECT @ID=SCOPE_IDENTITY()
GO


-- //// Update Stored procedure for updating one single row.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_Categories_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_Categories_Update]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will update an existing row in the table 'Blog_Categories'
-- Gets: @ID int
-- Gets: @Name nvarchar(64)
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_Categories_Update]
	@ID int,
	@Name nvarchar(64),
	@ErrorCode int OUTPUT
AS
-- UPDATE an existing row in the table.
UPDATE [dbo].[Blog_Categories]
SET 
	[Name] = @Name
WHERE
	[ID] = @ID
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- //// Delete Stored procedure using Primary Key.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_Categories_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_Categories_Delete]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will delete an existing row from the table 'Blog_Categories'
-- using the Primary Key. 
-- Gets: @ID int
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_Categories_Delete]
	@ID int,
	@ErrorCode int OUTPUT
AS
-- DELETE an existing row from the table.
DELETE FROM [dbo].[Blog_Categories]
WHERE
	[ID] = @ID
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- //// Select Stored procedure, based on Primary Key.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_Categories_SelectOne]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_Categories_SelectOne]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will select an existing row from the table 'Blog_Categories'
-- based on the Primary Key.
-- Gets: @ID int
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_Categories_SelectOne]
	@ID int,
	@ErrorCode int OUTPUT
AS
-- SELECT an existing row from the table.
SELECT
	[ID],
	[Name]
FROM [dbo].[Blog_Categories]
WHERE
	[ID] = @ID
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- //// Select All Stored procedure.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_Categories_SelectAll]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_Categories_SelectAll]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will select all rows from the table 'Blog_Categories'
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_Categories_SelectAll]
	@ErrorCode int OUTPUT
AS
-- SELECT all rows from the table.
SELECT
	[ID],
	[Name]
FROM [dbo].[Blog_Categories]
ORDER BY 
	[ID] ASC
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- [End of Stored Procedures for table:     Blog_Categories]
-- ========================================================================================================
GO

-- ========================================================================================================
-- [Stored Procedures generated for table:  Blog_CategoryPostLink]
GO

-- //// Insert Stored procedure.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_CategoryPostLink_Insert]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_CategoryPostLink_Insert]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will insert 1 row in the table 'Blog_CategoryPostLink'
-- Gets: @Post_ID int
-- Gets: @Category_ID int
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_CategoryPostLink_Insert]
	@Post_ID int,
	@Category_ID int,
	@ErrorCode int OUTPUT
AS
-- INSERT a new row in the table.
INSERT [dbo].[Blog_CategoryPostLink]
(
	[Post_ID],
	[Category_ID]
)
VALUES
(
	@Post_ID,
	@Category_ID
)
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- //// Delete Stored procedure using Primary Key.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_CategoryPostLink_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_CategoryPostLink_Delete]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will delete an existing row from the table 'Blog_CategoryPostLink'
-- using the Primary Key. 
-- Gets: @Post_ID int
-- Gets: @Category_ID int
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_CategoryPostLink_Delete]
	@Post_ID int,
	@Category_ID int,
	@ErrorCode int OUTPUT
AS
-- DELETE an existing row from the table.
DELETE FROM [dbo].[Blog_CategoryPostLink]
WHERE
	[Post_ID] = @Post_ID
	AND [Category_ID] = @Category_ID
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- //// Delete Stored procedure using PK field [Post_ID]
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_CategoryPostLink_DeleteAllWPost_IDLogic]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_CategoryPostLink_DeleteAllWPost_IDLogic]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will delete one or more  existing rows from the table 'Blog_CategoryPostLink'
-- using the Primary Key field [Post_ID]. 
-- Gets: @Post_ID int
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_CategoryPostLink_DeleteAllWPost_IDLogic]
	@Post_ID int,
	@ErrorCode int OUTPUT
AS
-- DELETE one or more existing rows from the table.
DELETE FROM [dbo].[Blog_CategoryPostLink]
WHERE
	[Post_ID] = @Post_ID
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- //// Delete Stored procedure using PK field [Category_ID]
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_CategoryPostLink_DeleteAllWCategory_IDLogic]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_CategoryPostLink_DeleteAllWCategory_IDLogic]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will delete one or more  existing rows from the table 'Blog_CategoryPostLink'
-- using the Primary Key field [Category_ID]. 
-- Gets: @Category_ID int
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_CategoryPostLink_DeleteAllWCategory_IDLogic]
	@Category_ID int,
	@ErrorCode int OUTPUT
AS
-- DELETE one or more existing rows from the table.
DELETE FROM [dbo].[Blog_CategoryPostLink]
WHERE
	[Category_ID] = @Category_ID
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- //// Select Stored procedure, based on Primary Key.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_CategoryPostLink_SelectOne]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_CategoryPostLink_SelectOne]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will select an existing row from the table 'Blog_CategoryPostLink'
-- based on the Primary Key.
-- Gets: @Post_ID int
-- Gets: @Category_ID int
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_CategoryPostLink_SelectOne]
	@Post_ID int,
	@Category_ID int,
	@ErrorCode int OUTPUT
AS
-- SELECT an existing row from the table.
SELECT
	[Post_ID],
	[Category_ID]
FROM [dbo].[Blog_CategoryPostLink]
WHERE
	[Post_ID] = @Post_ID
	AND [Category_ID] = @Category_ID
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- //// Select All Stored procedure.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_CategoryPostLink_SelectAll]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_CategoryPostLink_SelectAll]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will select all rows from the table 'Blog_CategoryPostLink'
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_CategoryPostLink_SelectAll]
	@ErrorCode int OUTPUT
AS
-- SELECT all rows from the table.
SELECT
	[Post_ID],
	[Category_ID]
FROM [dbo].[Blog_CategoryPostLink]
ORDER BY 
	[Post_ID] ASC
	, [Category_ID] ASC
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- //// Select Stored procedure, based on field [Post_ID].
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_CategoryPostLink_SelectAllWPost_IDLogic]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_CategoryPostLink_SelectAllWPost_IDLogic]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will select one or more existing rows from the table 'Blog_CategoryPostLink'
-- based on a foreign key field.
-- Gets: @Post_ID int
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_CategoryPostLink_SelectAllWPost_IDLogic]
	@Post_ID int,
	@ErrorCode int OUTPUT
AS
-- SELECT one or more existing rows from the table.
SELECT
	[Post_ID],
	[Category_ID]
FROM [dbo].[Blog_CategoryPostLink]
WHERE
	[Post_ID] = @Post_ID
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- //// Select Stored procedure, based on field [Category_ID].
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_CategoryPostLink_SelectAllWCategory_IDLogic]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_CategoryPostLink_SelectAllWCategory_IDLogic]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will select one or more existing rows from the table 'Blog_CategoryPostLink'
-- based on a foreign key field.
-- Gets: @Category_ID int
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_CategoryPostLink_SelectAllWCategory_IDLogic]
	@Category_ID int,
	@ErrorCode int OUTPUT
AS
-- SELECT one or more existing rows from the table.
SELECT
	[Post_ID],
	[Category_ID]
FROM [dbo].[Blog_CategoryPostLink]
WHERE
	[Category_ID] = @Category_ID
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- [End of Stored Procedures for table:     Blog_CategoryPostLink]
-- ========================================================================================================
GO

-- ========================================================================================================
-- [Stored Procedures generated for table:  Blog_Posts]
GO

-- //// Insert Stored procedure.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_Posts_Insert]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_Posts_Insert]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will insert 1 row in the table 'Blog_Posts'
-- Gets: @Title nvarchar(128)
-- Gets: @Body ntext
-- Gets: @Published bit
-- Gets: @AllowComments bit
-- Gets: @Syndicate bit
-- Gets: @User_ID uniqueidentifier
-- Gets: @TitleUrl nvarchar(2048)
-- Gets: @Source nvarchar(128)
-- Gets: @SourceUrl nvarchar(2048)
-- Gets: @Created datetime
-- Gets: @Issued datetime
-- Gets: @Modified datetime
-- Returns: @ID int
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_Posts_Insert]
	@Title nvarchar(128),
	@Body ntext,
	@Published bit,
	@AllowComments bit,
	@Syndicate bit,
	@User_ID uniqueidentifier,
	@TitleUrl nvarchar(2048),
	@Source nvarchar(128),
	@SourceUrl nvarchar(2048),
	@Created datetime,
	@Issued datetime,
	@Modified datetime,
	@ID int OUTPUT,
	@ErrorCode int OUTPUT
AS
-- INSERT a new row in the table.
INSERT [dbo].[Blog_Posts]
(
	[Title],
	[Body],
	[Published],
	[AllowComments],
	[Syndicate],
	[User_ID],
	[TitleUrl],
	[Source],
	[SourceUrl],
	[Created],
	[Issued],
	[Modified]
)
VALUES
(
	@Title,
	@Body,
	ISNULL(@Published, (1)),
	ISNULL(@AllowComments, (1)),
	ISNULL(@Syndicate, (1)),
	@User_ID,
	@TitleUrl,
	@Source,
	@SourceUrl,
	@Created,
	@Issued,
	@Modified
)
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
-- Get the IDENTITY value for the row just inserted.
SELECT @ID=SCOPE_IDENTITY()
GO


-- //// Update Stored procedure for updating one single row.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_Posts_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_Posts_Update]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will update an existing row in the table 'Blog_Posts'
-- Gets: @ID int
-- Gets: @Title nvarchar(128)
-- Gets: @Body ntext
-- Gets: @Published bit
-- Gets: @AllowComments bit
-- Gets: @Syndicate bit
-- Gets: @User_ID uniqueidentifier
-- Gets: @TitleUrl nvarchar(2048)
-- Gets: @Source nvarchar(128)
-- Gets: @SourceUrl nvarchar(2048)
-- Gets: @Created datetime
-- Gets: @Issued datetime
-- Gets: @Modified datetime
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_Posts_Update]
	@ID int,
	@Title nvarchar(128),
	@Body ntext,
	@Published bit,
	@AllowComments bit,
	@Syndicate bit,
	@User_ID uniqueidentifier,
	@TitleUrl nvarchar(2048),
	@Source nvarchar(128),
	@SourceUrl nvarchar(2048),
	@Created datetime,
	@Issued datetime,
	@Modified datetime,
	@ErrorCode int OUTPUT
AS
-- UPDATE an existing row in the table.
UPDATE [dbo].[Blog_Posts]
SET 
	[Title] = @Title,
	[Body] = @Body,
	[Published] = @Published,
	[AllowComments] = @AllowComments,
	[Syndicate] = @Syndicate,
	[User_ID] = @User_ID,
	[TitleUrl] = @TitleUrl,
	[Source] = @Source,
	[SourceUrl] = @SourceUrl,
	[Created] = @Created,
	[Issued] = @Issued,
	[Modified] = @Modified
WHERE
	[ID] = @ID
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- //// Delete Stored procedure using Primary Key.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_Posts_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_Posts_Delete]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will delete an existing row from the table 'Blog_Posts'
-- using the Primary Key. 
-- Gets: @ID int
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_Posts_Delete]
	@ID int,
	@ErrorCode int OUTPUT
AS
-- DELETE an existing row from the table.
DELETE FROM [dbo].[Blog_Posts]
WHERE
	[ID] = @ID
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- //// Select Stored procedure, based on Primary Key.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_Posts_SelectOne]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_Posts_SelectOne]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will select an existing row from the table 'Blog_Posts'
-- based on the Primary Key.
-- Gets: @ID int
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_Posts_SelectOne]
	@ID int,
	@ErrorCode int OUTPUT
AS
-- SELECT an existing row from the table.
SELECT
	[ID],
	[Title],
	[Body],
	[Published],
	[AllowComments],
	[Syndicate],
	[User_ID],
	[TitleUrl],
	[Source],
	[SourceUrl],
	[Created],
	[Issued],
	[Modified]
FROM [dbo].[Blog_Posts]
WHERE
	[ID] = @ID
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- //// Select All Stored procedure.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Blog_Posts_SelectAll]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[Blog_Posts_SelectAll]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will select all rows from the table 'Blog_Posts'
-- Returns: @ErrorCode int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[Blog_Posts_SelectAll]
	@ErrorCode int OUTPUT
AS
-- SELECT all rows from the table.
SELECT
	[ID],
	[Title],
	[Body],
	[Published],
	[AllowComments],
	[Syndicate],
	[User_ID],
	[TitleUrl],
	[Source],
	[SourceUrl],
	[Created],
	[Issued],
	[Modified]
FROM [dbo].[Blog_Posts]
ORDER BY 
	[ID] ASC
-- Get the Error Code for the statement just executed.
SELECT @ErrorCode=@@ERROR
GO


-- [End of Stored Procedures for table:     Blog_Posts]
-- ========================================================================================================
GO
